<?php
/*
 * Project: ChatGPT API
 * Author: Vontainment
 * URL: https://vontainment.com
 * File: feeds.php
 * Description: ChatGPT API Status Generator
 */

require_once '../config.php';
require_once '../app/status-helper.php';

// Check if the required query parameters are present in the URL
if (!isset($_GET['acct']) || !isset($_GET['key'])) {
    // If the parameters are missing, show an error message and exit the script
    echo 'Error: Missing required parameters';
    exit();
}

if (isset($_GET['acct']) && isset($_GET['key'])) {
    $accountName = $_GET['acct'];
    $key = $_GET['key'];

    $accountFiles = glob("../storage/accounts/*/{$accountName}");

    if (!empty($accountFiles)) {
        // Get the account file
        $accountFile = $accountFiles[0];
        $accountData = json_decode(file_get_contents($accountFile), true);
        $accountOwner = $accountData['owner'];

        if ($accountData['key'] === $key) {
            outputRssFeed($accountName, $accountOwner, $accountData, $key);
        } else {
            echo 'Invalid key.';
        }
    } else {
        echo 'Invalid account.';
        exit();
    }
} else {
    echo 'Missing account or key.';
    exit();
}

function outputRssFeed($accountName, $accountOwner, $accountData, $key)
{
    $statusFile = "../storage/statuses/{$accountOwner}/{$accountName}";

    if (file_exists($statusFile)) {
        $statuses = json_decode(file_get_contents($statusFile), true);
    } else {
        $statuses = [];
    }

    $imageFolder = "images/{$accountName}/";
    $images = glob($imageFolder . "*.{jpg,jpeg,png}", GLOB_BRACE);

    $imageAssignFile = $imageFolder . "img";
    if (!file_exists($imageAssignFile)) {
        file_put_contents($imageAssignFile, "");
    }
    $imageAssignments = file($imageAssignFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);

    header('Content-Type: application/rss+xml; charset=utf-8');
    $rssUrl = DOMAIN . '/feeds.php?acct=' . $accountName . '&key=' . $key;
    echo '<?xml version="1.0" encoding="UTF-8"?>' . PHP_EOL;
    echo '<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">' . PHP_EOL;
    echo '<channel>' . PHP_EOL;
    echo '<title>Facebook Statuses - ' . htmlspecialchars($accountName) . '</title>' . PHP_EOL;
    echo '<link>' . htmlspecialchars($rssUrl) . '</link>' . PHP_EOL;
    echo '<atom:link href="' . htmlspecialchars($rssUrl) . '" rel="self" type="application/rss+xml" />' . PHP_EOL;
    echo '<description>Facebook status updates generated by GPT API for ' . htmlspecialchars($accountName) . '</description>' . PHP_EOL;
    echo '<language>en-us</language>' . PHP_EOL;

    $count = count($statuses);
    foreach ($statuses as $index => $status) {
        if (!empty($status)) {
            $rssImageTag = '';
            $imageName = trim($imageAssignments[$index] ?? '');
            if (!empty($imageName) && $imageName !== '_NOIMAGE_') {
                $imageUrl = DOMAIN . '/' . $imageName;
                $imageExtension = pathinfo($imageName, PATHINFO_EXTENSION);
                $contentType = "image/{$imageExtension}";
                $rssImageTag = '<img src="' . htmlspecialchars($imageUrl) . '"/>' . PHP_EOL;
            }

            $description = htmlspecialchars(trim($status['text'])) . (!empty($rssImageTag) ? ' ' . $rssImageTag : '');
            $description = str_replace('&quot;', ' ', $description); // Replace HTML entity with double quotes
            echo '<item>' . PHP_EOL;
            echo '<title>Status ' . ($count - $index) . '</title>' . PHP_EOL;
            echo '<link>' . htmlspecialchars($accountData['link']) . '</link>' . PHP_EOL;
            echo '<guid isPermaLink="false">' . md5($status['text']) . '</guid>' . PHP_EOL;
            echo '<pubDate>' . date('r', strtotime($status['created_at'])) . '</pubDate>' . PHP_EOL;
            echo '<description><![CDATA[' . $description . ']]></description>' . PHP_EOL;
            echo '<content:encoded><![CDATA[' . $description . ']]></content:encoded>' . PHP_EOL;
            echo '</item>' . PHP_EOL;
        }
    }

    echo '</channel>' . PHP_EOL;
    echo '</rss>';
}
